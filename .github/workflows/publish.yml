name: Publish to NPM

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch: # Allows manual triggering
    inputs:
      tag:
        description: "The git tag to build and publish (e.g., v0.1.0). Ensure it exists."
        required: true
        type: string

jobs:
  npm_publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # If triggered by workflow_dispatch, checkout the specified tag
          # Otherwise (triggered by tag push), it checks out the pushed tag by default
          ref: ${{ github.event.inputs.tag || github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      - name: Verify package version (optional safety check for manual runs)
        # This step is more useful if you allow manually specifying a version in workflow_dispatch
        # that might differ from the package.json. For tag-based, it should match.
        if: github.event_name == 'workflow_dispatch'
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${{ github.event.inputs.tag }}
          # Remove 'v' prefix from tag for comparison
          if [[ "$TAG_VERSION" == "v"* ]]; then
            TAG_VERSION_NO_V="${TAG_VERSION:1}"
          else
            TAG_VERSION_NO_V="$TAG_VERSION"
          fi

          if [ "$PACKAGE_VERSION" != "$TAG_VERSION_NO_V" ]; then
            echo "Error: package.json version ($PACKAGE_VERSION) does not match tag version ($TAG_VERSION_NO_V) from input."
            # exit 1 # You might choose to fail here or just warn
          fi
          echo "Publishing version $PACKAGE_VERSION based on package.json"

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
